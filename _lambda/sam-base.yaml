AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'MCS'
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionUri: swagger.yaml
      Variables:
        getSchedule: !Ref MCSgetSchedule
        setSchedule: !Ref MCSsetSchedule
  MCSgetSchedule:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.6
      CodeUri: MCSgetSchedule
      AutoPublishAlias: live
      DeploymentPreference:
        Enabled: true
        Type: AllAtOnce
      Description: ''
      MemorySize: 128
      Timeout: 15
      Tracing: Active
      Role: 'role_arn_MCS-lambda'
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /getSchedule
            Method: GET
#      Environment:
#        Variables:
  MCSsetSchedule:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.6
      CodeUri: MCSsetSchedule
      AutoPublishAlias: live
      DeploymentPreference:
        Enabled: true
        Type: AllAtOnce
      Description: ''
      MemorySize: 128
      Timeout: 15
      Tracing: Active
      Role: 'role_arn_MCS-lambda'
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /setSchedule
            Method: GET
#      Environment:
#        Variables:
#  iam_MCS-lambda:
#    Type: AWS::IAM::Role
#    Properties:
#        AssumeRolePolicyDocument:
#        Version: "2012-10-17"
#        Statement:
#          - Effect: Allow
#            Principal:
#              Service: lambda.amazonaws.com
#            Action: "sts:AssumeRole"
#    policies:
#      -
#        PolicyName: "MCS_access-cron_for_lambda"
#        PolicyDocument:
#            Version: "2012-10-17"
#            Statement:
#              -
#                Effect: "Allow"
#                Action: "events:*"
#                Resource: "*"
#              -
#                Effect: "Allow"
#                Action: "iam:PassRole"
#                Resource: "arn:aws:iam::*:role/AWS_Events_Invoke_Targets"
#              -
#                Effect: "Allow"
#                Action": [
#                  "logs:CreateLogGroup",
#                  "logs:CreateLogStream",
#                  "logs:PutLogEvents"]
#                Resource: "*"
